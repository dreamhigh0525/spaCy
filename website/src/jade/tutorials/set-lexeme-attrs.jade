include ./meta.jade
include ../headers.jade

+WritePost(Meta)
    h3 Job sizes grow faster than CPUs improve (so write fast code)

    p The common wisdom in software engineering is that computers are fast and getting faster, so even if your job is compute-bound today, it may well be network or disk-bound tomorrow.  So if you spend time optimizing performance, you're creating a depreciating asset: after time passes, it won't matter.

    p This is often not true for natural language processing. The total compute-hours needed to process the entire web is growing, not shrinking.  And we often do want to process the entire web, to answer a very specific question, to find opinions about a niche product or a local service, to frecast a trend as early as possible, to collect data for minority languages, etc.
    
    p Lots of interesting NLP applications are needle-in-a-haystack problems. The haystack is getting bigger, so we can't sit around and wait for Moore's law to make everything easy. We have to write fast code.

    h3 Caching can be unreasonably effective (so manage your memory)

    p Zipf's law is probably the most important thing to learn in computational linguistics. We're otherwise pretty short of general truths, and this one's non-obvious and very useful.

    h3 Sparse data structures are often essential (so your code may not look like the math)

    h3 Exact inference is mostly irrelevant (so just use beam-search)
